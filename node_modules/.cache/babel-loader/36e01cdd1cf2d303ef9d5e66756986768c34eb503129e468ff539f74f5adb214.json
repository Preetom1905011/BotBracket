{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Trash } from 'react-bootstrap-icons';\nimport { PencilSquare } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotList = _ref => {\n  _s();\n  let {\n    names,\n    setNames\n  } = _ref;\n  const [editingId, setEditingId] = useState(null);\n  const [newName, setNewName] = useState({});\n  const handleEdit = _ref2 => {\n    let {\n      id\n    } = _ref2;\n    setEditingId(id);\n    const editedName = names.find(name => name.id === id);\n    setNewName({\n      \"newbotname\": editedName.title,\n      \"newchipnum\": editedName.chip\n    });\n  };\n  const handleSave = () => {\n    setNames(names.map(name => name.id === editingId ? {\n      ...name,\n      title: newName.newbotname,\n      chip: newName.newchipnum\n    } : name));\n    setEditingId(null);\n  };\n  const handleDelete = _ref3 => {\n    let {\n      id\n    } = _ref3;\n    setNames(names.filter(name => name.id !== id));\n  };\n  const handleChange = event => {\n    setNewName(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   {names.map((name) => (\n    //       <li className='list-item container' key={name.id}>\n    //           {/* <input\n    //             type=\"text\"\n    //             value={name.title}\n    //             //onChange = {(event) => event.preventDefault()}\n    //           />\n    //           <div>\n    //           <input\n    //             type=\"text\"\n    //             value={name.chip}\n    //           /> */}\n    //           {name.title} \n    //           <div>\n    //             {name.chip} &nbsp;\n    //             <PencilSquare className='button-delete-edit' onClick={() => handleEdit(name)}/>\n    //             <Trash className='button-delete-edit' onClick={() => handleDelete(name)}/>\n    //           </div>\n    //       </li>\n    //     )\n    //   )}\n    // </div>\n    _jsxDEV(\"div\", {\n      children: names.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item container\",\n        children: editingId === name.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"edit\",\n          onSubmit: handleSave,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"text-edit-input\",\n            name: \"newbotname\",\n            autocomplete: \"off\",\n            value: newName.newbotname,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"num-edit-input\",\n            name: \"newchipnum\",\n            autocomplete: \"off\",\n            value: newName.newchipnum,\n            min: \"0\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [name.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [name.chip, \" \\xA0\", /*#__PURE__*/_jsxDEV(PencilSquare, {\n              className: \"button-delete-edit\",\n              onClick: () => handleEdit(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Trash, {\n              className: \"button-delete-edit\",\n              onClick: () => handleDelete(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, name.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(BotList, \"gIN85ql2H0hmTKAVAsVrvPNFqVA=\");\n_c = BotList;\nexport default BotList;\nvar _c;\n$RefreshReg$(_c, \"BotList\");","map":{"version":3,"names":["React","Trash","PencilSquare","useState","BotList","names","setNames","editingId","setEditingId","newName","setNewName","handleEdit","id","editedName","find","name","title","chip","handleSave","map","newbotname","newchipnum","handleDelete","filter","handleChange","event","prevState","target","value"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js"],"sourcesContent":["import React from 'react'\nimport { Trash } from 'react-bootstrap-icons'\nimport { PencilSquare } from 'react-bootstrap-icons'\nimport { useState } from 'react'\n\nconst BotList = ({names, setNames}) => {\n\n  const [editingId, setEditingId] = useState(null);\n  const [newName, setNewName] = useState({});\n\n  const handleEdit = ({id}) => {\n    setEditingId(id);\n    const editedName = names.find(name => name.id === id);\n    setNewName({\"newbotname\": editedName.title, \"newchipnum\":editedName.chip});\n  };\n\n  const handleSave = () => {\n    setNames(\n      names.map(name =>\n        name.id === editingId\n          ? { ...name, title: newName.newbotname , chip: newName.newchipnum}\n          : name\n      )\n    );\n    setEditingId(null);\n  };\n\n  const handleDelete = ({id}) => {\n    setNames(names.filter((name) => name.id !== id));\n  };\n\n  const handleChange = (event) => {\n    setNewName(prevState => ({ ...prevState, [event.target.name]: event.target.value }))\n  };\n\n\n  return (\n    // <div>\n    //   {names.map((name) => (\n    //       <li className='list-item container' key={name.id}>\n    //           {/* <input\n    //             type=\"text\"\n    //             value={name.title}\n    //             //onChange = {(event) => event.preventDefault()}\n    //           />\n    //           <div>\n    //           <input\n    //             type=\"text\"\n    //             value={name.chip}\n    //           /> */}\n    //           {name.title} \n    //           <div>\n    //             {name.chip} &nbsp;\n    //             <PencilSquare className='button-delete-edit' onClick={() => handleEdit(name)}/>\n    //             <Trash className='button-delete-edit' onClick={() => handleDelete(name)}/>\n    //           </div>\n    //       </li>\n    //     )\n    //   )}\n    // </div>\n\n    <div>\n        {names.map(name => (\n          <li className='list-item container' key={name.id}>\n            {editingId === name.id ? (\n              <form className='edit' onSubmit={handleSave} onChange={handleChange}>\n                <input\n                  type=\"text\"\n                  className='text-edit-input'\n                  name=\"newbotname\"\n                  autocomplete=\"off\"\n                  value={newName.newbotname} \n                  required\n                />\n                <input\n                  type=\"number\"\n                  className='num-edit-input'\n                  name=\"newchipnum\"\n                  autocomplete=\"off\"\n                  value={newName.newchipnum} \n                  min=\"0\"\n                  required\n                />\n                <button>Save</button>\n              </form>\n            ) : (\n              <>\n                {name.title} \n                <div>\n                   {name.chip} &nbsp;\n                   <PencilSquare className='button-delete-edit' onClick={() => handleEdit(name)}/>\n                   <Trash className='button-delete-edit' onClick={() => handleDelete(name)}/>\n                 </div>\n              </>\n            )}\n          </li>\n        ))}\n    </div>\n  )\n}\n\n\nexport default BotList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
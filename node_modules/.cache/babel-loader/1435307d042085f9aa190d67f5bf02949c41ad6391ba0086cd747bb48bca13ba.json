{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/card.css';\nimport { v4 as uuidv4 } from \"uuid\";\nimport BotList from './BotList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  let {\n    input,\n    setInput,\n    names,\n    setNames\n  } = _ref;\n  const onInputChange = event => {\n    // setInput(event.target.value);\n    setInput(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const onFormSubmit = event => {\n    event.preventDefault();\n    setNames([...names, {\n      id: uuidv4(),\n      title: input.botname,\n      chip: input.chipnum\n    }]);\n    // setInput({botname: \"\", chipnum: \"3\"})\n    setInput(Object.assign(...Object.keys(input).map(k => ({\n      [k]: \"\"\n    }))));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Participants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onFormSubmit,\n        onChange: onInputChange,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add Bot Name\",\n            name: \"botname\",\n            className: \"bot-input\",\n            value: input.botname,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Chip\",\n            name: \"chipnum\",\n            className: \"num-input\",\n            value: input.chipnum,\n            min: \"0\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-style\",\n            type: \"submit\",\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BotList, {\n        names: names,\n        setNames: setNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Copyright - 2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"@\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// Card.propTypes = {\n//     name: PropTypes.string\n// }\n\n// Card.defaultProps = {\n//     name: \"Name\"\n// }\n\n// # Change the C code here if you have used something different from the one given.\n\n// #int i = 0;\n// #while (i < n) { \n// #   if (A[i] != val)                // If no match, proceed with next element\n// #      i++;\n// #   else {\n// #      for (int k = i; k < n - 1; k++)  // Shift elements if a match is found       \n// #         A[k] = A[k+1];          \n// #      n = n - 1;            // if element deleted, length of array decreases\n// #   }\n// #}\n\n// # i -> $t0, n -> $s1, A -> $s0, val -> $s2\n// # k -> $t5\n\n// addi $t0, $zero, 0            # i = 0\n\n// While:  bge $t0, $s1, Exit\n\n// Load_i: sll $t1, $t0, 2         # 4 * i -> $t1\n//         add $t1, $t1, $s0       # addr of A[i] -> $t1\n//         lw $t2, 0($t1)          # A[i] -> $t2\n\n// If:     beq $t2, $s2, Else      # if A[i] == val, goto else\n//         addi $t0, $t0, 1        # if A[i] != val, i++\n//         j IfEnd                 # jump to condition's end\n\n// Else:   add $t5, $t0, $zero     # k = i\n//         addi $t6, $s2, -1       # n - 1 -> $t6\n// Loop:   bge $t5, $t6, LoopEnd   # when k >= n - 1, exit Loop\n// Load_k: sll $t7, $t5, 2         # 4 * k -> $t7\n//         add $t7, $t7, $s0       # addr of A[k]\n//         lw $t8, 4($t7)          # A[k+1] -> $t8\n//         sw $t8, 0($t7)          # A[k] = A[k+1]\n//         addi $t5, $t5, 1        # k = k + 1\n//         j Loop\n// LoopEnd:addi $s2, $s2, -1       # n = n - 1\n// IfEnd:  j While\n// Exit:\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","PropTypes","v4","uuidv4","BotList","Card","input","setInput","names","setNames","onInputChange","event","prevState","target","name","value","onFormSubmit","preventDefault","id","title","botname","chip","chipnum","Object","assign","keys","map","k"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/Card.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../styles/card.css'\nimport {v4 as uuidv4} from \"uuid\";\nimport BotList from './BotList';\n\nexport default function Card({input, setInput, names, setNames}) {\n\n  const onInputChange = (event) => {\n    // setInput(event.target.value);\n    setInput(prevState => ({ ...prevState, [event.target.name]: event.target.value }))\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    setNames([...names, {id: uuidv4(), title: input.botname, chip: input.chipnum}])\n    // setInput({botname: \"\", chipnum: \"3\"})\n    setInput(Object.assign(...Object.keys(input).map(k => ({ [k]: \"\" }))));\n  };\n\n\n  return (\n    <>\n      <div className=\"card-body\">\n          <h2>Participants</h2>\n          <form onSubmit={onFormSubmit} onChange={onInputChange}>\n            <div className='container'>\n              <input\n                type=\"text\"\n                placeholder=\"Add Bot Name\"\n                name=\"botname\"\n                className='bot-input'\n                value={input.botname}\n                required\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Chip\"\n                name=\"chipnum\"\n                className='num-input'\n                value={input.chipnum}\n                min=\"0\"\n                required\n              />\n              <button className='button-style' type=\"submit\">Enter</button>\n            </div>\n          </form>\n        <BotList names={names} setNames={setNames}/>\n      </div>\n      <div className=\"footer\">\n          <h5>Copyright - 2023</h5>\n          <p>@</p>\n      </div>\n    </>\n  )\n}\n\n// Card.propTypes = {\n//     name: PropTypes.string\n// }\n\n// Card.defaultProps = {\n//     name: \"Name\"\n// }\n\n\n\n\n\n\n\n// # Change the C code here if you have used something different from the one given.\n\n// #int i = 0;\n// #while (i < n) { \n// #   if (A[i] != val)                // If no match, proceed with next element\n// #      i++;\n// #   else {\n// #      for (int k = i; k < n - 1; k++)  // Shift elements if a match is found       \n// #         A[k] = A[k+1];          \n// #      n = n - 1;            // if element deleted, length of array decreases\n// #   }\n// #}\n\n// # i -> $t0, n -> $s1, A -> $s0, val -> $s2\n// # k -> $t5\n\n// addi $t0, $zero, 0            # i = 0\n\n// While:  bge $t0, $s1, Exit\n\n// Load_i: sll $t1, $t0, 2         # 4 * i -> $t1\n//         add $t1, $t1, $s0       # addr of A[i] -> $t1\n//         lw $t2, 0($t1)          # A[i] -> $t2\n\n// If:     beq $t2, $s2, Else      # if A[i] == val, goto else\n//         addi $t0, $t0, 1        # if A[i] != val, i++\n//         j IfEnd                 # jump to condition's end\n\n// Else:   add $t5, $t0, $zero     # k = i\n//         addi $t6, $s2, -1       # n - 1 -> $t6\n// Loop:   bge $t5, $t6, LoopEnd   # when k >= n - 1, exit Loop\n// Load_k: sll $t7, $t5, 2         # 4 * k -> $t7\n//         add $t7, $t7, $s0       # addr of A[k]\n//         lw $t8, 4($t7)          # A[k+1] -> $t8\n//         sw $t8, 0($t7)          # A[k] = A[k+1]\n//         addi $t5, $t5, 1        # k = k + 1\n//         j Loop\n// LoopEnd:addi $s2, $s2, -1       # n = n - 1\n// IfEnd:  j While\n// Exit:\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,oBAAoB;AAC3B,SAAQC,EAAE,IAAIC,MAAM,QAAO,MAAM;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC;AAAA;AAEhC,eAAe,SAASC,IAAI,OAAqC;EAAA,IAApC;IAACC,KAAK;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EAE7D,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B;IACAJ,QAAQ,CAACK,SAAS,KAAK;MAAE,GAAGA,SAAS;MAAE,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;IAAM,CAAC,CAAC,CAAC;EACpF,CAAC;EAED,MAAMC,YAAY,GAAIL,KAAK,IAAK;IAC9BA,KAAK,CAACM,cAAc,EAAE;IACtBR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAACU,EAAE,EAAEf,MAAM,EAAE;MAAEgB,KAAK,EAAEb,KAAK,CAACc,OAAO;MAAEC,IAAI,EAAEf,KAAK,CAACgB;IAAO,CAAC,CAAC,CAAC;IAC/E;IACAf,QAAQ,CAACgB,MAAM,CAACC,MAAM,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACnB,KAAK,CAAC,CAACoB,GAAG,CAACC,CAAC,KAAK;MAAE,CAACA,CAAC,GAAG;IAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,CAAC;EAGD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACrB;QAAM,QAAQ,EAAEX,YAAa;QAAC,QAAQ,EAAEN,aAAc;QAAA,uBACpD;UAAK,SAAS,EAAC,WAAW;UAAA,wBACxB;YACE,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,cAAc;YAC1B,IAAI,EAAC,SAAS;YACd,SAAS,EAAC,WAAW;YACrB,KAAK,EAAEJ,KAAK,CAACc,OAAQ;YACrB,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QACR,eACF;YACE,IAAI,EAAC,QAAQ;YACb,WAAW,EAAC,MAAM;YAClB,IAAI,EAAC,SAAS;YACd,SAAS,EAAC,WAAW;YACrB,KAAK,EAAEd,KAAK,CAACgB,OAAQ;YACrB,GAAG,EAAC,GAAG;YACP,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QACR,eACF;YAAQ,SAAS,EAAC,cAAc;YAAC,IAAI,EAAC,QAAQ;YAAA,UAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACzD;QAAA;QAAA;QAAA;MAAA,QACD,eACT,QAAC,OAAO;QAAC,KAAK,EAAEd,KAAM;QAAC,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACxC,eACN;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACnB;QAAA,UAAI;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAK,eACzB;QAAA,UAAG;MAAC;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA,gBACL;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KAxGwBJ,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
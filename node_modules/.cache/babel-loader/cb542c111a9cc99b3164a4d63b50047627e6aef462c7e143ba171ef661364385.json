{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/MatchScene.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styles/matchScene.css';\nimport MatchCard from './MatchCard';\nimport scrappyRed from '../media/Updated_Logo_red.png';\nimport scrappyBlue from '../media/Updated_Logo_blue2.png';\nimport vs_logo from '../media/VS_img2.png';\nimport WinToggle from './WinToggle';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MatchScene(_ref) {\n  _s();\n  let {\n    names,\n    setNames\n  } = _ref;\n  const [outRed, setOutRed] = useState({\n    id: \"\",\n    bet: 0,\n    result: \"\"\n  });\n  const [outBlue, setOutBlue] = useState({\n    id: \"\",\n    bet: 0,\n    result: \"\"\n  });\n  const [toggleState, setToggleState] = useState('na');\n  const [reset, setReset] = useState(false);\n  const handleEndMatch = e => {\n    console.log(toggleState);\n    setReset(!reset);\n    let winnerName = {\n      id: \"\"\n    };\n    let loserName = {\n      id: \"\"\n    };\n    if (outRed.result === \"winner\" && outBlue.result === \"loser\") {\n      winnerName = outRed;\n      loserName = outBlue;\n    } else if (outRed.result === \"loser\" && outBlue.result === \"winner\") {\n      winnerName = outBlue;\n      loserName = outRed;\n    }\n    const edited = names.map(name => {\n      if (name.id === winnerName.id) {\n        return {\n          ...name,\n          chip: parseInt(name.chip) + parseInt(loserName.bet)\n        };\n      } else if (name.id === loserName.id) {\n        return {\n          ...name,\n          chip: parseInt(name.chip) - parseInt(loserName.bet)\n        };\n      } else return name;\n    });\n    handleSortName(edited);\n    setToggleState(\"na\");\n    setOutRed({\n      id: \"\",\n      bet: 0,\n      result: \"\"\n    });\n    setOutBlue({\n      id: \"\",\n      bet: 0,\n      result: \"\"\n    });\n  };\n  const handleSortName = names => {\n    // set the state to the newly created sorted array with the three dots operator:\n    setNames([...names].sort((a, b) => b.chip - a.chip));\n  };\n\n  // const childApi = useCallback((api) => {\n  //   // do something in the parent with the childs exposed api\n  //   api.updateState();\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backdrop\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-grid\",\n      children: [/*#__PURE__*/_jsxDEV(MatchCard, {\n        reset: reset,\n        names: names,\n        outcome: outRed,\n        setOutcome: setOutRed,\n        select_style: \"fighter-select\",\n        confirm_style: \"fighter-confirmed\",\n        scrappy: scrappyRed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: vs_logo,\n        className: \"vs_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchCard, {\n        reset: reset,\n        names: names,\n        outcome: outBlue,\n        setOutcome: setOutBlue,\n        select_style: \"fighter-select fighter-select2\",\n        confirm_style: \"fighter-confirmed fighter-confirmed2\",\n        scrappy: scrappyBlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WinToggle, {\n      outRed: outRed,\n      setOutRed: setOutRed,\n      outBlue: outBlue,\n      setOutBlue: setOutBlue,\n      toggleState: toggleState,\n      setToggleState: setToggleState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"end-match-bt\",\n      onClick: handleEndMatch,\n      disabled: toggleState === \"na\" ? true : false,\n      children: \"END MATCH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-history\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"MATCH History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchScene, \"qEkDda+lIomc3DjRMt+fBlaI2Pw=\");\n_c = MatchScene;\nvar _c;\n$RefreshReg$(_c, \"MatchScene\");","map":{"version":3,"names":["React","MatchCard","scrappyRed","scrappyBlue","vs_logo","WinToggle","useState","useCallback","MatchScene","names","setNames","outRed","setOutRed","id","bet","result","outBlue","setOutBlue","toggleState","setToggleState","reset","setReset","handleEndMatch","e","console","log","winnerName","loserName","edited","map","name","chip","parseInt","handleSortName","sort","a","b"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/MatchScene.js"],"sourcesContent":["import React from 'react'\nimport '../styles/matchScene.css'\nimport MatchCard from './MatchCard'\nimport scrappyRed from '../media/Updated_Logo_red.png'; \nimport scrappyBlue from '../media/Updated_Logo_blue2.png'; \nimport vs_logo from '../media/VS_img2.png'; \nimport WinToggle from './WinToggle';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\n\nexport default function MatchScene({names, setNames}) {\n\n  const [outRed, setOutRed] = useState({id:\"\", bet:0, result:\"\"});\n  const [outBlue, setOutBlue] = useState({id:\"\", bet:0, result:\"\"});\n  const [toggleState, setToggleState] = useState('na');\n  const [reset, setReset] = useState(false);\n\n  const handleEndMatch = (e) => {\n    console.log(toggleState);\n    setReset(!reset);\n\n    let winnerName = {id:\"\"};\n    let loserName = {id:\"\"};\n    \n    if (outRed.result === \"winner\" && outBlue.result === \"loser\"){\n      winnerName = outRed;\n      loserName = outBlue;\n    }\n    else if (outRed.result === \"loser\" && outBlue.result === \"winner\"){\n      winnerName = outBlue;\n      loserName = outRed;\n    }\n    \n    const edited = names.map(name =>{\n      if (name.id === winnerName.id) {\n          return { ...name, chip: parseInt(name.chip) + parseInt(loserName.bet)};\n      }\n      else if (name.id === loserName.id) {\n        return { ...name, chip: parseInt(name.chip) - parseInt(loserName.bet)};\n      }\n      else return name;\n    });\n    \n    handleSortName(edited);\n    setToggleState(\"na\");\n    setOutRed({id:\"\", bet:0, result:\"\"});\n    setOutBlue({id:\"\", bet:0, result:\"\"});\n  }\n\n  const handleSortName = (names) => {\n    // set the state to the newly created sorted array with the three dots operator:\n    setNames(\n      [...names].sort((a, b) => b.chip - a.chip)\n    );\n  };\n\n  // const childApi = useCallback((api) => {\n  //   // do something in the parent with the childs exposed api\n  //   api.updateState();\n  // });\n\n  return (\n    <div className='backdrop'>\n        <div className='side-grid'>\n          <MatchCard \n              reset={reset}\n              names={names} \n              outcome={outRed}\n              setOutcome={setOutRed}\n              select_style={\"fighter-select\"} \n              confirm_style={\"fighter-confirmed\"}\n              scrappy={scrappyRed}></MatchCard>\n          <img src={vs_logo} className=\"vs_img\"/>\n          <MatchCard \n              reset={reset}\n              names={names} \n              outcome={outBlue}\n              setOutcome={setOutBlue}\n              select_style={\"fighter-select fighter-select2\"} \n              confirm_style={\"fighter-confirmed fighter-confirmed2\"}\n              scrappy={scrappyBlue}></MatchCard>\n        </div>\n        <WinToggle \n              outRed={outRed} \n              setOutRed={setOutRed} \n              outBlue={outBlue} \n              setOutBlue={setOutBlue}\n              toggleState={toggleState}\n              setToggleState={setToggleState}></WinToggle>\n        <button \n              className='end-match-bt'\n              onClick={handleEndMatch} \n              disabled={toggleState === \"na\"? true: false}>END MATCH</button>\n        <div className='match-history'>\n          <h3>MATCH History</h3>\n        </div>\n    </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
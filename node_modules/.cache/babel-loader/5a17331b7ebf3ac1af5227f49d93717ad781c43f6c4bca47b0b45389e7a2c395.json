{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/MatchScene.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styles/matchScene.css';\nimport MatchCard from './MatchCard';\nimport scrappyRed from '../media/Updated_Logo_red.png';\nimport scrappyBlue from '../media/Updated_Logo_blue2.png';\nimport vs_logo from '../media/VS_img2.png';\nimport WinToggle from './WinToggle';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport Timer from './Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MatchScene(_ref) {\n  _s();\n  let {\n    names,\n    setNames\n  } = _ref;\n  const [outRed, setOutRed] = useState({\n    id: \"\",\n    bet: 0,\n    result: \"\"\n  });\n  const [outBlue, setOutBlue] = useState({\n    id: \"\",\n    bet: 0,\n    result: \"\"\n  });\n  const [toggleState, setToggleState] = useState('na');\n  const [reset, setReset] = useState(false);\n  const [matches, setMatches] = useState([]);\n  const handleEndMatch = e => {\n    console.log(toggleState);\n    setReset(!reset);\n    let winnerName = {\n      id: \"\"\n    };\n    let loserName = {\n      id: \"\"\n    };\n    const redName = names.find(name => name.id === outRed.id).title;\n    const blueName = names.find(name => name.id === outBlue.id).title;\n    if (outRed.result === \"winner\" && outBlue.result === \"loser\") {\n      winnerName = outRed;\n      loserName = outBlue;\n      setMatches([...matches, {\n        \"red\": redName,\n        \"redScore\": '+' + loserName.bet,\n        \"blue\": blueName,\n        \"blueScore\": '-' + loserName.bet\n      }]);\n    } else if (outRed.result === \"loser\" && outBlue.result === \"winner\") {\n      winnerName = outBlue;\n      loserName = outRed;\n      setMatches([...matches, {\n        \"red\": redName,\n        \"redScore\": '-' + loserName.bet,\n        \"blue\": blueName,\n        \"blueScore\": '+' + loserName.bet\n      }]);\n    }\n    const edited = names.map(name => {\n      if (name.id === winnerName.id && winnerName.id !== loserName.id) {\n        return {\n          ...name,\n          chip: Number(name.chip) + Number(loserName.bet)\n        };\n      } else if (name.id === loserName.id && winnerName.id !== loserName.id) {\n        return {\n          ...name,\n          chip: Number(name.chip) - Number(loserName.bet)\n        };\n      } else return name;\n    });\n    handleSortName(edited);\n    setToggleState(\"na\");\n    setOutRed({\n      id: \"\",\n      bet: 0,\n      result: \"\"\n    });\n    setOutBlue({\n      id: \"\",\n      bet: 0,\n      result: \"\"\n    });\n    console.log(matches);\n  };\n  const handleSortName = names => {\n    // set the state to the newly created sorted array with the three dots operator:\n    setNames([...names].sort((a, b) => Number(b.chip) - Number(a.chip)));\n  };\n\n  // const childApi = useCallback((api) => {\n  //   // do something in the parent with the childs exposed api\n  //   api.updateState();\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backdrop\",\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      toggleState: toggleState,\n      setToggleState: setToggleState,\n      reset: reset,\n      outRed: outRed,\n      outBlue: outBlue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-grid\",\n      children: [/*#__PURE__*/_jsxDEV(MatchCard, {\n        reset: reset,\n        names: names,\n        outcome: outRed,\n        setOutcome: setOutRed,\n        select_style: \"fighter-select\",\n        confirm_style: \"fighter-confirmed\",\n        scrappy: scrappyRed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: vs_logo,\n        className: \"vs_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchCard, {\n        reset: reset,\n        names: names,\n        outcome: outBlue,\n        setOutcome: setOutBlue,\n        select_style: \"fighter-select fighter-select2\",\n        confirm_style: \"fighter-confirmed fighter-confirmed2\",\n        scrappy: scrappyBlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WinToggle, {\n      outRed: outRed,\n      setOutRed: setOutRed,\n      outBlue: outBlue,\n      setOutBlue: setOutBlue,\n      toggleState: toggleState,\n      setToggleState: setToggleState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"end-match-bt\",\n      onClick: handleEndMatch,\n      disabled: toggleState === \"na\" ? true : false,\n      children: \"END MATCH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Match History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), matches.map(match => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"match-hist-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", match.red]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", match.redScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), match.blueScore, \" \", match.blue]\n      }, match.red + \" \" + match.blue, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchScene, \"5p3KSvKxL5Hs8K9A50fjgS9ogX0=\");\n_c = MatchScene;\nvar _c;\n$RefreshReg$(_c, \"MatchScene\");","map":{"version":3,"names":["React","MatchCard","scrappyRed","scrappyBlue","vs_logo","WinToggle","useState","useCallback","Timer","MatchScene","names","setNames","outRed","setOutRed","id","bet","result","outBlue","setOutBlue","toggleState","setToggleState","reset","setReset","matches","setMatches","handleEndMatch","e","console","log","winnerName","loserName","redName","find","name","title","blueName","edited","map","chip","Number","handleSortName","sort","a","b","match","red","redScore","blueScore","blue"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/MatchScene.js"],"sourcesContent":["import React from 'react'\nimport '../styles/matchScene.css'\nimport MatchCard from './MatchCard'\nimport scrappyRed from '../media/Updated_Logo_red.png'; \nimport scrappyBlue from '../media/Updated_Logo_blue2.png'; \nimport vs_logo from '../media/VS_img2.png'; \nimport WinToggle from './WinToggle';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport Timer from './Timer';\n\nexport default function MatchScene({names, setNames}) {\n\n  const [outRed, setOutRed] = useState({id:\"\", bet:0, result:\"\"});\n  const [outBlue, setOutBlue] = useState({id:\"\", bet:0, result:\"\"});\n  const [toggleState, setToggleState] = useState('na');\n  const [reset, setReset] = useState(false);\n  const [matches, setMatches] = useState([]);\n\n  const handleEndMatch = (e) => {\n    console.log(toggleState);\n    setReset(!reset);\n\n    let winnerName = {id:\"\"};\n    let loserName = {id:\"\"};\n\n    const redName = (names.find(name => name.id === outRed.id)).title;\n    const blueName = (names.find(name => name.id === outBlue.id)).title;\n    \n    if (outRed.result === \"winner\" && outBlue.result === \"loser\"){\n      winnerName = outRed;\n      loserName = outBlue;\n\n      setMatches([...matches, {\"red\": redName, \"redScore\": '+'+loserName.bet, \"blue\": blueName, \"blueScore\": '-'+loserName.bet}]);\n    }\n    else if (outRed.result === \"loser\" && outBlue.result === \"winner\"){\n      winnerName = outBlue;\n      loserName = outRed;\n\n      setMatches([...matches, {\"red\": redName, \"redScore\": '-'+loserName.bet, \"blue\": blueName, \"blueScore\": '+'+loserName.bet}]);\n    }\n    \n    const edited = names.map(name =>{\n      if (name.id === winnerName.id && winnerName.id !== loserName.id) {\n          return { ...name, chip: Number(name.chip) + Number(loserName.bet)};\n      }\n      else if (name.id === loserName.id  && winnerName.id !== loserName.id) {\n        return { ...name, chip: Number(name.chip) - Number(loserName.bet)};\n      }\n      else return name;\n    });\n    \n\n    handleSortName(edited);\n    setToggleState(\"na\");\n    setOutRed({id:\"\", bet:0, result:\"\"});\n    setOutBlue({id:\"\", bet:0, result:\"\"});\n\n    console.log(matches);\n\n  }\n\n  const handleSortName = (names) => {\n    // set the state to the newly created sorted array with the three dots operator:\n    setNames(\n      [...names].sort((a, b) => Number(b.chip) - Number(a.chip))\n    );\n  };\n\n  // const childApi = useCallback((api) => {\n  //   // do something in the parent with the childs exposed api\n  //   api.updateState();\n  // });\n\n  return (\n    <div className='backdrop'>\n        <Timer \n            toggleState={toggleState} \n            setToggleState={setToggleState}\n            reset={reset} \n            outRed={outRed} \n            outBlue={outBlue}></Timer>\n        <div className='side-grid'>\n          <MatchCard \n              reset={reset}\n              names={names} \n              outcome={outRed}\n              setOutcome={setOutRed}\n              select_style={\"fighter-select\"} \n              confirm_style={\"fighter-confirmed\"}\n              scrappy={scrappyRed}></MatchCard>\n          <img src={vs_logo} className=\"vs_img\"/>\n          <MatchCard \n              reset={reset}\n              names={names} \n              outcome={outBlue}\n              setOutcome={setOutBlue}\n              select_style={\"fighter-select fighter-select2\"} \n              confirm_style={\"fighter-confirmed fighter-confirmed2\"}\n              scrappy={scrappyBlue}></MatchCard>\n        </div>\n        <WinToggle \n              outRed={outRed} \n              setOutRed={setOutRed} \n              outBlue={outBlue} \n              setOutBlue={setOutBlue}\n              toggleState={toggleState}\n              setToggleState={setToggleState}></WinToggle>\n        <button \n              className='end-match-bt'\n              onClick={handleEndMatch} \n              disabled={toggleState === \"na\"? true: false}>END MATCH</button>\n        <div className='match-history'>\n          <h3>Match History</h3>\n          {matches.map(match => (\n            <li className='match-hist-list' key={match.red + \" \" + match.blue}>\n              <span> {match.red}</span> \n              <span> {match.redScore}</span>  \n              <span></span>{match.blueScore} {match.blue}\n            </li>\n          ))}\n        </div>\n    </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
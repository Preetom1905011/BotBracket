{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Trash } from 'react-bootstrap-icons';\nimport { PencilSquare } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotList = _ref => {\n  _s();\n  let {\n    names,\n    setNames\n  } = _ref;\n  const [editingId, setEditingId] = useState(null);\n  const [newName, setNewName] = useState(\"\");\n  const handleEdit = id => {\n    setEditingId(id);\n    setNewName(names.find(name => name.id === id).title);\n  };\n  const handleSave = () => {\n    setNames(names.map(name => name.id === editingId ? {\n      ...name,\n      title: newName,\n      chip: name.chip\n    } : name));\n    setEditingId(null);\n  };\n  const handleDelete = _ref2 => {\n    let {\n      id\n    } = _ref2;\n    setNames(names.filter(name => name.id !== id));\n  };\n  const handleChange = event => {\n    setNewName(event.target.value);\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   {names.map((name) => (\n    //       <li className='list-item container' key={name.id}>\n    //           {/* <input\n    //             type=\"text\"\n    //             value={name.title}\n    //             //onChange = {(event) => event.preventDefault()}\n    //           />\n    //           <div>\n    //           <input\n    //             type=\"text\"\n    //             value={name.chip}\n    //           /> */}\n    //           {name.title} \n    //           <div>\n    //             {name.chip} &nbsp;\n    //             <PencilSquare className='button-delete-edit' onClick={() => handleEdit(name)}/>\n    //             <Trash className='button-delete-edit' onClick={() => handleDelete(name)}/>\n    //           </div>\n    //       </li>\n    //     )\n    //   )}\n    // </div>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: names.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: editingId === name.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: newName,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [name.title, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(name.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, name.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(BotList, \"3wJ2UrqECD8SZ0ImTUAIU2jCB2A=\");\n_c = BotList;\nexport default BotList;\nvar _c;\n$RefreshReg$(_c, \"BotList\");","map":{"version":3,"names":["React","Trash","PencilSquare","useState","BotList","names","setNames","editingId","setEditingId","newName","setNewName","handleEdit","id","find","name","title","handleSave","map","chip","handleDelete","filter","handleChange","event","target","value"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js"],"sourcesContent":["import React from 'react'\nimport { Trash } from 'react-bootstrap-icons'\nimport { PencilSquare } from 'react-bootstrap-icons'\nimport { useState } from 'react'\n\nconst BotList = ({names, setNames}) => {\n\n  const [editingId, setEditingId] = useState(null);\n  const [newName, setNewName] = useState(\"\");\n\n  const handleEdit = id => {\n    setEditingId(id);\n    setNewName(names.find(name => name.id === id).title);\n  };\n\n  const handleSave = () => {\n    setNames(\n      names.map(name =>\n        name.id === editingId\n          ? { ...name, title: newName , chip: name.chip}\n          : name\n      )\n    );\n    setEditingId(null);\n  };\n\n  const handleDelete = ({id}) => {\n    setNames(names.filter((name) => name.id !== id));\n  };\n\n  const handleChange = event => {\n    setNewName(event.target.value);\n  };\n\n\n  return (\n    // <div>\n    //   {names.map((name) => (\n    //       <li className='list-item container' key={name.id}>\n    //           {/* <input\n    //             type=\"text\"\n    //             value={name.title}\n    //             //onChange = {(event) => event.preventDefault()}\n    //           />\n    //           <div>\n    //           <input\n    //             type=\"text\"\n    //             value={name.chip}\n    //           /> */}\n    //           {name.title} \n    //           <div>\n    //             {name.chip} &nbsp;\n    //             <PencilSquare className='button-delete-edit' onClick={() => handleEdit(name)}/>\n    //             <Trash className='button-delete-edit' onClick={() => handleDelete(name)}/>\n    //           </div>\n    //       </li>\n    //     )\n    //   )}\n    // </div>\n\n    <div>\n      <li>\n        {names.map(name => (\n          <li key={name.id}>\n            {editingId === name.id ? (\n              <>\n                <input value={newName} onChange={handleChange} />\n                <button onClick={handleSave}>Save</button>\n              </>\n            ) : (\n              <>\n                {name.title}\n                <button onClick={() => handleEdit(name.id)}>Edit</button>\n              </>\n            )}\n          </li>\n        ))}\n      </li>\n    </div>\n  )\n}\n\n\nexport default BotList\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,OAAO,GAAG,QAAuB;EAAA;EAAA,IAAtB;IAACC,KAAK;IAAEC;EAAQ,CAAC;EAEhC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,UAAU,GAAGC,EAAE,IAAI;IACvBJ,YAAY,CAACI,EAAE,CAAC;IAChBF,UAAU,CAACL,KAAK,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAACG,KAAK,CAAC;EACtD,CAAC;EAED,MAAMC,UAAU,GAAG,MAAM;IACvBV,QAAQ,CACND,KAAK,CAACY,GAAG,CAACH,IAAI,IACZA,IAAI,CAACF,EAAE,KAAKL,SAAS,GACjB;MAAE,GAAGO,IAAI;MAAEC,KAAK,EAAEN,OAAO;MAAGS,IAAI,EAAEJ,IAAI,CAACI;IAAI,CAAC,GAC5CJ,IAAI,CACT,CACF;IACDN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMW,YAAY,GAAG,SAAU;IAAA,IAAT;MAACP;IAAE,CAAC;IACxBN,QAAQ,CAACD,KAAK,CAACe,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,MAAMS,YAAY,GAAGC,KAAK,IAAI;IAC5BZ,UAAU,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAGD;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;MAAA,uBACE;QAAA,UACGnB,KAAK,CAACY,GAAG,CAACH,IAAI,iBACb;UAAA,UACGP,SAAS,KAAKO,IAAI,CAACF,EAAE,gBACpB;YAAA,wBACE;cAAO,KAAK,EAAEH,OAAQ;cAAC,QAAQ,EAAEY;YAAa;cAAA;cAAA;cAAA;YAAA,QAAG,eACjD;cAAQ,OAAO,EAAEL,UAAW;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA,gBACzC,gBAEH;YAAA,WACGF,IAAI,CAACC,KAAK,eACX;cAAQ,OAAO,EAAE,MAAMJ,UAAU,CAACG,IAAI,CAACF,EAAE,CAAE;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;QAE5D,GAXME,IAAI,CAACF,EAAE;UAAA;UAAA;UAAA;QAAA,QAajB;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA;EACD;AAEV,CAAC;AAAA,GA3EKR,OAAO;AAAA,KAAPA,OAAO;AA8Eb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
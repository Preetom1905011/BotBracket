{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Trash } from 'react-bootstrap-icons';\nimport { PencilSquare } from 'react-bootstrap-icons';\nimport { Save } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotList = _ref => {\n  _s();\n  let {\n    names,\n    setNames,\n    handleSortName\n  } = _ref;\n  const [editingId, setEditingId] = useState(null);\n  const [newName, setNewName] = useState({});\n  const handleEdit = _ref2 => {\n    let {\n      id\n    } = _ref2;\n    setEditingId(id);\n    const editedName = names.find(name => name.id === id);\n    setNewName({\n      \"newbotname\": editedName.title,\n      \"newchipnum\": editedName.chip\n    });\n  };\n  const handleSave = event => {\n    event.preventDefault();\n    const edited = names.map(name => name.id === editingId ? {\n      ...name,\n      id: name.id,\n      title: newName.newbotname,\n      chip: newName.newchipnum\n    } : name);\n    handleSortName(edited);\n    setEditingId(null);\n  };\n  const handleDelete = _ref3 => {\n    let {\n      id\n    } = _ref3;\n    setNames(names.filter(name => name.id !== id));\n  };\n  const handleChange = event => {\n    setNewName(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: names.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-item container\",\n      children: editingId === name.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"edit-form\",\n        onSubmit: handleSave,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-edit-input\",\n          name: \"newbotname\",\n          autocomplete: \"off\",\n          value: newName.newbotname,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"num-edit-input\",\n          name: \"newchipnum\",\n          autocomplete: \"off\",\n          value: newName.newchipnum,\n          min: \"0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Save, {\n          className: \"button-sv\",\n          onClick: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [name.title, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [name.chip, \" \\xA0\", /*#__PURE__*/_jsxDEV(PencilSquare, {\n            className: \"button-del-ed\",\n            onClick: () => handleEdit(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Trash, {\n            className: \"button-del-ed\",\n            onClick: () => handleDelete(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, name.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(BotList, \"gIN85ql2H0hmTKAVAsVrvPNFqVA=\");\n_c = BotList;\nexport default BotList;\nvar _c;\n$RefreshReg$(_c, \"BotList\");","map":{"version":3,"names":["React","Trash","PencilSquare","Save","useState","BotList","names","setNames","handleSortName","editingId","setEditingId","newName","setNewName","handleEdit","id","editedName","find","name","title","chip","handleSave","event","preventDefault","edited","map","newbotname","newchipnum","handleDelete","filter","handleChange","prevState","target","value"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js"],"sourcesContent":["import React from 'react'\nimport { Trash } from 'react-bootstrap-icons'\nimport { PencilSquare } from 'react-bootstrap-icons'\nimport {Save} from 'react-bootstrap-icons'\nimport { useState } from 'react'\n\nconst BotList = ({names, setNames, handleSortName}) => {\n\n  const [editingId, setEditingId] = useState(null);\n  const [newName, setNewName] = useState({});\n\n  const handleEdit = ({id}) => {\n    setEditingId(id);\n    const editedName = names.find(name => name.id === id);\n    setNewName({\"newbotname\": editedName.title, \"newchipnum\":editedName.chip});\n  };\n\n  const handleSave = (event) => {\n    event.preventDefault();\n    const edited = names.map(name =>\n                      name.id === editingId\n                        ? { ...name, id: name.id, title: newName.newbotname , chip: newName.newchipnum}\n                        : name\n                    )\n    handleSortName(edited);\n    setEditingId(null);\n  };\n\n\n  const handleDelete = ({id}) => {\n    setNames(names.filter((name) => name.id !== id));\n  };\n\n  const handleChange = (event) => {\n    setNewName(prevState => ({ ...prevState, [event.target.name]: event.target.value }))\n  };\n\n  return (\n\n    <div>\n        {names.map(name => (\n          <li className='list-item container' key={name.id}>\n            {editingId === name.id ? (\n              <form className='edit-form' onSubmit={handleSave} onChange={handleChange}>\n                <input\n                  type=\"text\"\n                  className='text-edit-input'\n                  name=\"newbotname\"\n                  autocomplete=\"off\"\n                  value={newName.newbotname} \n                  required\n                />\n                <input\n                  type=\"number\"\n                  className='num-edit-input'\n                  name=\"newchipnum\"\n                  autocomplete=\"off\"\n                  value={newName.newchipnum} \n                  min=\"0\"\n                  required\n                />\n                <Save className=\"button-sv\" onClick={handleSave}></Save>\n              </form>\n            ) : (\n              <>\n                {name.title} \n                <div>\n                   {name.chip} &nbsp;\n                   <PencilSquare className='button-del-ed' onClick={() => handleEdit(name)}/>\n                   <Trash className='button-del-ed' onClick={() => handleDelete(name)}/>\n                 </div>\n              </>\n            )}\n          </li>\n        ))}\n    </div>\n  )\n}\n\n\nexport default BotList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
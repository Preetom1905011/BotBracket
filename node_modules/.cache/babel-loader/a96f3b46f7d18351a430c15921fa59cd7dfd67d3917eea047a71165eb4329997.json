{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [input, setInput] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  const [time, setTime] = useState({\n    minutes: 0,\n    seconds: 0\n  });\n  // const [minutes, setMinutes] = useState(0);\n  // const [seconds, setSeconds] = useState(0);\n  const [counter, setCounter] = useState(0);\n  const [timerState, setTimerState] = useState(\"reset\");\n  useEffect(() => {\n    if (counter >= 0 && timerState === \"start\") {\n      setTimeout(() => setCounter(counter - 1), 1000);\n      // setMinutes(Math.floor(counter / 60));\n      // setSeconds(Math.floor(counter % 60));\n      setTime({\n        minutes: Math.floor(counter / 60),\n        seconds: Math.floor(counter % 60)\n      });\n    }\n  }, [counter]);\n  const startTimer = () => {\n    if (minutes > 0 || seconds >> 0) {\n      setTimerState(\"start\");\n    }\n    setCounter(minutes * 60 + seconds);\n  };\n  const pauseTimer = () => {\n    setTimerState(\"pause\");\n  };\n  const resetTimer = () => {\n    setTimerState(\"reset\");\n    setCounter(0);\n    // setMinutes(0);\n    // setSeconds(0);\n    setTime({\n      minutes: 0,\n      seconds: 0\n    });\n  };\n  const handleInput = event => {\n    setInput(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const handleTime = event => {\n    setTime({\n      minutes: input.minutes.toString().padStart(2, '0'),\n      seconds: input.seconds.toString().padStart(2, '0')\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"timer-input\",\n        name: \"minutes\",\n        autoComplete: \"off\",\n        value: time.minutes,\n        onChange: e => {\n          setMinutes(e.target.value);\n        },\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"timer-input\",\n        name: \"seconds\",\n        autoComplete: \"off\",\n        value: time.seconds,\n        onChange: handleInput,\n        onBlur: handleTime,\n        max: \"59\",\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), timerState === \"start\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-bt\",\n      onClick: pauseTimer,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-bt\",\n      onClick: startTimer,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-bt\",\n      onClick: resetTimer,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"1wXlDQqBmz/S+iWheFh0ycP2Xv4=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","Timer","input","setInput","minutes","seconds","time","setTime","counter","setCounter","timerState","setTimerState","setTimeout","Math","floor","startTimer","pauseTimer","resetTimer","handleInput","event","prevState","target","name","value","handleTime","toString","padStart","e","setMinutes"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/Timer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/timer.css';\n\nexport default function Timer() {\n\n    const [input, setInput] = useState({minutes: 0, seconds: 0});\n    const [time, setTime] = useState({minutes: 0, seconds: 0});\n    // const [minutes, setMinutes] = useState(0);\n    // const [seconds, setSeconds] = useState(0);\n    const [counter, setCounter] = useState(0);\n    const [timerState, setTimerState] = useState(\"reset\");\n\n    useEffect(() => {\n        if (counter >= 0 && timerState === \"start\") {\n            setTimeout(() => setCounter(counter-1), 1000);\n            // setMinutes(Math.floor(counter / 60));\n            // setSeconds(Math.floor(counter % 60));\n            setTime({minutes: Math.floor(counter / 60), seconds: Math.floor(counter % 60)});\n        }\n    }, [counter]);\n\n    const startTimer = () => {\n        if ((minutes > 0 || seconds >> 0)){\n            setTimerState(\"start\"); \n        }\n        setCounter(minutes * 60 + seconds);\n    }\n    const pauseTimer = () => {\n        setTimerState(\"pause\"); \n    }\n    const resetTimer = () => {\n        setTimerState(\"reset\");\n        setCounter(0);\n        // setMinutes(0);\n        // setSeconds(0);\n        setTime({minutes: 0, seconds: 0});\n\n    }\n\n    const handleInput = (event) => {\n        setInput(prevState => ({ ...prevState, [event.target.name]: event.target.value }))\n    };\n    const handleTime = (event) => {\n        setTime({minutes: input.minutes.toString().padStart(2, '0'), seconds: input.seconds.toString().padStart(2, '0')});\n    }\n\n    return (\n        <div className='timer'>\n            <form>\n            <input\n                type=\"number\"\n                className='timer-input'\n                name=\"minutes\"\n                autoComplete=\"off\"\n                value={time.minutes}\n                onChange={(e)=>{setMinutes(e.target.value)}}\n                min=\"0\"\n                required/>\n            <input\n                type=\"number\"\n                className='timer-input'\n                name=\"seconds\"\n                autoComplete=\"off\"\n                value={time.seconds}\n                onChange={handleInput}\n                onBlur={handleTime}\n                max=\"59\"\n                min=\"0\"\n                required/>\n            </form>\n            {(timerState === \"start\")? \n                    <button className='timer-bt' onClick={pauseTimer} >Pause</button>\n                    : <button className='timer-bt' onClick={startTimer}>Start</button>}\n            <button className='timer-bt' onClick={resetTimer}>Reset</button>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
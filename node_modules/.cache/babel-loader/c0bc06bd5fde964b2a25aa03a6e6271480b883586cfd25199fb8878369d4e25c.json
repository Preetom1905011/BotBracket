{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/App.js\",\n  _s = $RefreshSig$();\nimport Navbar from './components/Navbar';\nimport Card from './components/Card';\nimport MatchScene from './components/MatchScene';\n// import './App.css';\nimport './styles/base.css';\nimport './styles/card.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [input, setInput] = useState({botname: \"\", chipnum: \"3\"});\n  const [input, setInput] = useState({});\n  const [names, setNames] = useState([]);\n  const [winner, setWinner] = useState({\n    corner: \"\",\n    id: null\n  });\n  const [loser, setLoser] = useState({\n    corner: \"\",\n    id: null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-grid-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          input: input,\n          setInput: setInput,\n          names: names,\n          setNames: setNames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MatchScene, {\n        names: names,\n        setWinner: setWinner,\n        setLoser: setLoser,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Combat Ready Robotics @ ASU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iIrkK0IvOaZlzXWzo9tGgJAWbgU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Card","MatchScene","useState","App","input","setInput","names","setNames","winner","setWinner","corner","id","loser","setLoser"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/App.js"],"sourcesContent":["import Navbar from './components/Navbar';\nimport Card from './components/Card';\nimport MatchScene from './components/MatchScene';\n// import './App.css';\nimport './styles/base.css';\nimport './styles/card.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  // const [input, setInput] = useState({botname: \"\", chipnum: \"3\"});\n  const [input, setInput] = useState({});\n  const [names, setNames] = useState([]);\n  const [winner, setWinner] = useState({corner:\"\", id:null});\n  const [loser, setLoser] = useState({corner:\"\", id:null})\n\n  return (\n    <div>\n      <Navbar></Navbar>\n      <div className='side-grid-main'>\n        <span>\n        <Card \n              input={input} \n              setInput={setInput} \n              names={names} \n              setNames={setNames}>\n        </Card>\n        </span>\n        <MatchScene names={names} setWinner={setWinner} setLoser={setLoser} winner={winner}></MatchScene>\n      </div>\n\n      <div className=\"footer\">\n          <p>Combat Ready Robotics @ ASU</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD;AACA,OAAO,mBAAmB;AAC1B,OAAO,mBAAmB;AAC1B,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,GAAG,GAAG;EAAA;EAEb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IAACQ,MAAM,EAAC,EAAE;IAAEC,EAAE,EAAC;EAAI,CAAC,CAAC;EAC1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IAACQ,MAAM,EAAC,EAAE;IAAEC,EAAE,EAAC;EAAI,CAAC,CAAC;EAExD,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACjB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAA,uBACA,QAAC,IAAI;UACC,KAAK,EAAEP,KAAM;UACb,QAAQ,EAAEC,QAAS;UACnB,KAAK,EAAEC,KAAM;UACb,QAAQ,EAAEC;QAAS;UAAA;UAAA;UAAA;QAAA;MAClB;QAAA;QAAA;QAAA;MAAA,QACA,eACP,QAAC,UAAU;QAAC,KAAK,EAAED,KAAM;QAAC,SAAS,EAAEG,SAAU;QAAC,QAAQ,EAAEI,QAAS;QAAC,MAAM,EAAEL;MAAO;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7F,eAEN;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACnB;QAAA,UAAG;MAA2B;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA5BQL,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
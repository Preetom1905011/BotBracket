{"ast":null,"code":"var _jsxFileName = \"/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Trash } from 'react-bootstrap-icons';\nimport { PencilSquare } from 'react-bootstrap-icons';\nimport { Save } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport Popup from './Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotList = _ref => {\n  _s();\n  let {\n    names,\n    setNames,\n    handleSortName\n  } = _ref;\n  const [editingId, setEditingId] = useState({});\n  const [newName, setNewName] = useState({});\n  const [popup, setPopup] = useState({\n    show: false,\n    // initial values set to false and null\n    id: null\n  });\n  const handleEdit = _ref2 => {\n    let {\n      id\n    } = _ref2;\n    setEditingId(id);\n    const editedName = names.find(name => name.id === id);\n    setNewName({\n      \"newbotname\": editedName.title,\n      \"newchipnum\": editedName.chip\n    });\n  };\n  const handleSave = event => {\n    event.preventDefault();\n    const edited = names.map(name => name.id === editingId ? {\n      ...name,\n      id: name.id,\n      title: newName.newbotname,\n      chip: newName.newchipnum\n    } : name);\n    handleSortName(edited);\n    setEditingId(null);\n  };\n\n  // const handleDelete = ({id}) => {\n  //   setNames(names.filter((name) => name.id !== id));\n  // };\n\n  // This will show the Cofirmation Box\n\n  const handleDelete = _ref3 => {\n    let {\n      id\n    } = _ref3;\n    setPopup({\n      show: true,\n      id: id\n    });\n  };\n\n  // This will perform the deletion and hide the Confirmation Box\n\n  const handleDeleteTrue = () => {\n    if (popup.show && popup.id) {\n      let filteredNames = names.filter(name => name.id !== popup.id);\n      setNames(filteredNames);\n      setPopup({\n        show: false,\n        id: null\n      });\n    }\n  };\n\n  // This will just hide the Confirmation Box when user clicks \"No\"/\"Cancel\"\n\n  const handleDeleteFalse = () => {\n    setPopup({\n      show: false,\n      id: null\n    });\n  };\n  const handleChange = event => {\n    setNewName(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: names.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-item container\",\n      children: editingId === name.id && !popup.show ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"edit-form\",\n        onSubmit: handleSave,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-edit-input\",\n          name: \"newbotname\",\n          autocomplete: \"off\",\n          value: newName.newbotname,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"num-edit-input\",\n          name: \"newchipnum\",\n          autocomplete: \"off\",\n          value: newName.newchipnum,\n          min: \"0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Save, {\n          className: \"button-sv\",\n          onClick: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [name.title, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [name.chip, \" \\xA0\", /*#__PURE__*/_jsxDEV(PencilSquare, {\n            className: \"button-del-ed\",\n            onClick: () => handleEdit(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Trash, {\n            className: \"button-del-ed\",\n            onClick: () => handleDelete(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), popup.id === name.id && popup.show && /*#__PURE__*/_jsxDEV(Popup, {\n          name: name,\n          handleDeleteTrue: handleDeleteTrue,\n          handleDeleteFalse: handleDeleteFalse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true)\n    }, name.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(BotList, \"oMcSn+mtj758s9hAO1GSH54isZc=\");\n_c = BotList;\nexport default BotList;\nvar _c;\n$RefreshReg$(_c, \"BotList\");","map":{"version":3,"names":["React","Trash","PencilSquare","Save","useState","Popup","BotList","names","setNames","handleSortName","editingId","setEditingId","newName","setNewName","popup","setPopup","show","id","handleEdit","editedName","find","name","title","chip","handleSave","event","preventDefault","edited","map","newbotname","newchipnum","handleDelete","handleDeleteTrue","filteredNames","filter","handleDeleteFalse","handleChange","prevState","target","value"],"sources":["/Users/preetombiswas/ASU/PersonalProjects/botbracket/src/components/BotList.js"],"sourcesContent":["import React from 'react'\nimport { Trash } from 'react-bootstrap-icons'\nimport { PencilSquare } from 'react-bootstrap-icons'\nimport {Save} from 'react-bootstrap-icons'\nimport { useState } from 'react'\nimport Popup from './Popup'\n\nconst BotList = ({names, setNames, handleSortName}) => {\n\n  const [editingId, setEditingId] = useState({\n    \n  });\n  const [newName, setNewName] = useState({});\n  const [popup, setPopup] = useState({\n    show: false, // initial values set to false and null\n    id: null,\n  });\n\n  const handleEdit = ({id}) => {\n    setEditingId(id);\n    const editedName = names.find(name => name.id === id);\n    setNewName({\"newbotname\": editedName.title, \"newchipnum\":editedName.chip});\n  };\n\n  const handleSave = (event) => {\n    event.preventDefault();\n    const edited = names.map(name =>\n                      name.id === editingId\n                        ? { ...name, id: name.id, title: newName.newbotname , chip: newName.newchipnum}\n                        : name\n                    )\n    handleSortName(edited);\n    setEditingId(null);\n  };\n\n\n  // const handleDelete = ({id}) => {\n  //   setNames(names.filter((name) => name.id !== id));\n  // };\n\n  // This will show the Cofirmation Box\n\n  const handleDelete = ({id}) => {\n    setPopup({\n      show: true,\n      id: id,\n    });\n  };\n\n  // This will perform the deletion and hide the Confirmation Box\n\n  const handleDeleteTrue = () => {\n    if (popup.show && popup.id) {\n      let filteredNames = names.filter((name) => name.id !== popup.id);\n      setNames(filteredNames);\n      setPopup({\n        show: false,\n        id: null,\n      });\n    }\n  };\n\n  // This will just hide the Confirmation Box when user clicks \"No\"/\"Cancel\"\n\n  const handleDeleteFalse = () => {\n    setPopup({\n      show: false,\n      id: null,\n    });\n  };\n\n  const handleChange = (event) => {\n    setNewName(prevState => ({ ...prevState, [event.target.name]: event.target.value }))\n  };\n\n  return (\n    <div>\n        {names.map(name => (\n          <li className='list-item container' key={name.id}>\n            {editingId === name.id && !popup.show ? (\n              <form className='edit-form' onSubmit={handleSave} onChange={handleChange}>\n                <input\n                  type=\"text\"\n                  className='text-edit-input'\n                  name=\"newbotname\"\n                  autocomplete=\"off\"\n                  value={newName.newbotname} \n                  required\n                />\n                <input\n                  type=\"number\"\n                  className='num-edit-input'\n                  name=\"newchipnum\"\n                  autocomplete=\"off\"\n                  value={newName.newchipnum} \n                  min=\"0\"\n                  required\n                />\n                <Save className=\"button-sv\" onClick={handleSave}></Save>\n              </form>\n            ) : (\n              <>\n                {name.title} \n                <div>\n                   {name.chip} &nbsp;\n                   <PencilSquare className='button-del-ed' onClick={() => handleEdit(name)}/>\n                   <Trash className='button-del-ed' onClick={() => handleDelete(name)}/>\n                 </div>\n\n                {popup.id === name.id && popup.show && (\n                  <Popup\n                    name={name}\n                    handleDeleteTrue={handleDeleteTrue}\n                    handleDeleteFalse={handleDeleteFalse}\n                  />\n                )}\n              </>\n            )}\n          </li>\n        ))}\n    </div>\n  )\n}\n\n\nexport default BotList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}